digraph graphname {
n6549 [shape=box,label="(6549)\ndestPixels.position = 0\nthis.setPixels(destRect,destPixels)"];
n6548 [shape=box,label="(6548)"];
n6547 [shape=box,label="(6547)\nvar _hx_tmp = a << 24\nvar _hx_tmp = r << 16\nvar _hx_tmp = _hx_tmp | _hx_tmp\nvar _hx_tmp = g << 8\nvar _hx_tmp = _hx_tmp | _hx_tmp\ncolor = _hx_tmp | b\ndestPixels.position = i * 4\ndestPixels.writeUnsignedInt(color)"];
n6546 [shape=box,label="(6546)\nvar _hx_tmp = a + \", \"\nvar _hx_tmp = _hx_tmp + r\nvar _hx_tmp = _hx_tmp + \", \"\nvar _hx_tmp = _hx_tmp + g\nvar _hx_tmp = _hx_tmp + \", \"\nvar _hx_tmp = _hx_tmp + b\nhaxe.Log.trace(_hx_tmp,{fileName : \"BitmapData.hx\",lineNumber : 426,className : \"openfl._legacy.display.BitmapData\",methodName : \"merge\"})"];
n6545 [shape=box,label="(6545)\n@:cond-branch _hx_tmp"];
n6545 -> n6546[style="dashed",color="gray",label="then"];
n6545 -> n6547[style="dashed",color="gray",label="next"];
n6544 [shape=box,label="(6544)\n_hx_tmp = true"];
n6543 [shape=box,label="(6543)\n_hx_tmp = b > 255"];
n6542 [shape=box,label="(6542)\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n6542 -> n6543[style="dashed",color="gray",label="then"];
n6542 -> n6544[style="dashed",color="gray",label="else"];
n6542 -> n6545[style="dashed",color="gray",label="next"];
n6541 [shape=box,label="(6541)\n_hx_tmp = true"];
n6540 [shape=box,label="(6540)\n_hx_tmp = g > 255"];
n6539 [shape=box,label="(6539)\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n6539 -> n6540[style="dashed",color="gray",label="then"];
n6539 -> n6541[style="dashed",color="gray",label="else"];
n6539 -> n6542[style="dashed",color="gray",label="next"];
n6538 [shape=box,label="(6538)\n_hx_tmp = true"];
n6537 [shape=box,label="(6537)\n_hx_tmp = r > 255"];
n6536 [shape=box,label="(6536)\nvar _hx_tmp = _hx_tmp / _hx_tmp\nb = Std.int(_hx_tmp)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = ! a > 255\n@:cond-branch _hx_tmp"];
n6536 -> n6537[style="dashed",color="gray",label="then"];
n6536 -> n6538[style="dashed",color="gray",label="else"];
n6536 -> n6539[style="dashed",color="gray",label="next"];
n6535 [shape=box,label="(6535)\n_hx_tmp = int + 0.0"];
n6534 [shape=box,label="(6534)\n_hx_tmp = 4294967296.0 + int"];
n6533 [shape=box,label="(6533)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6533 -> n6534[style="dashed",color="gray",label="then"];
n6533 -> n6535[style="dashed",color="gray",label="else"];
n6533 -> n6536[style="dashed",color="gray",label="next"];
n6532 [shape=box,label="(6532)\n_hx_tmp = int + 0.0"];
n6531 [shape=box,label="(6531)\n_hx_tmp = 4294967296.0 + int"];
n6530 [shape=box,label="(6530)\nvar _hx_tmp = _hx_tmp / _hx_tmp\ng = Std.int(_hx_tmp)\nvar int = cast cast cast cast cast (cast sourcePixel & 255) * cast redMultiplier + cast cast (cast destPixel & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6530 -> n6531[style="dashed",color="gray",label="then"];
n6530 -> n6532[style="dashed",color="gray",label="else"];
n6530 -> n6533[style="dashed",color="gray",label="next"];
n6529 [shape=box,label="(6529)\n_hx_tmp = int + 0.0"];
n6528 [shape=box,label="(6528)\n_hx_tmp = 4294967296.0 + int"];
n6527 [shape=box,label="(6527)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6527 -> n6528[style="dashed",color="gray",label="then"];
n6527 -> n6529[style="dashed",color="gray",label="else"];
n6527 -> n6530[style="dashed",color="gray",label="next"];
n6526 [shape=box,label="(6526)\n_hx_tmp = int + 0.0"];
n6525 [shape=box,label="(6525)\n_hx_tmp = 4294967296.0 + int"];
n6524 [shape=box,label="(6524)\nvar _hx_tmp = _hx_tmp / _hx_tmp\nr = Std.int(_hx_tmp)\nvar _hx_tmp = sourcePixel >> 8\nvar _hx_tmp = destPixel >> 8\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6524 -> n6525[style="dashed",color="gray",label="then"];
n6524 -> n6526[style="dashed",color="gray",label="else"];
n6524 -> n6527[style="dashed",color="gray",label="next"];
n6523 [shape=box,label="(6523)\n_hx_tmp = int + 0.0"];
n6522 [shape=box,label="(6522)\n_hx_tmp = 4294967296.0 + int"];
n6521 [shape=box,label="(6521)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6521 -> n6522[style="dashed",color="gray",label="then"];
n6521 -> n6523[style="dashed",color="gray",label="else"];
n6521 -> n6524[style="dashed",color="gray",label="next"];
n6520 [shape=box,label="(6520)\n_hx_tmp = int + 0.0"];
n6519 [shape=box,label="(6519)\n_hx_tmp = 4294967296.0 + int"];
n6518 [shape=box,label="(6518)\nvar _hx_tmp = _hx_tmp / _hx_tmp\na = Std.int(_hx_tmp)\nvar _hx_tmp = sourcePixel >> 16\nvar _hx_tmp = destPixel >> 16\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6518 -> n6519[style="dashed",color="gray",label="then"];
n6518 -> n6520[style="dashed",color="gray",label="else"];
n6518 -> n6521[style="dashed",color="gray",label="next"];
n6517 [shape=box,label="(6517)\n_hx_tmp = int + 0.0"];
n6516 [shape=box,label="(6516)\n_hx_tmp = 4294967296.0 + int"];
n6515 [shape=box,label="(6515)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6515 -> n6516[style="dashed",color="gray",label="then"];
n6515 -> n6517[style="dashed",color="gray",label="else"];
n6515 -> n6518[style="dashed",color="gray",label="next"];
n6514 [shape=box,label="(6514)\n_hx_tmp = int + 0.0"];
n6513 [shape=box,label="(6513)\n_hx_tmp = 4294967296.0 + int"];
n6512 [shape=box,label="(6512)\n`1 = `1 + 1\nvar i = `1 - 1\nsourcePixel = sourcePixels.readUnsignedInt()\ndestPixel = destPixels.readUnsignedInt()\nvar _hx_tmp = sourcePixel >> 24\nvar _hx_tmp = destPixel >> 24\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6512 -> n6513[style="dashed",color="gray",label="then"];
n6512 -> n6514[style="dashed",color="gray",label="else"];
n6512 -> n6515[style="dashed",color="gray",label="next"];
n6511 [shape=box,label="(6511)\nbreak"];
n6510 [shape=box,label="(6510)\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n6510 -> n6511[style="dashed",color="gray",label="then"];
n6510 -> n6512[style="dashed",color="gray",label="next"];
n6509 [shape=box,label="<loop-head>
(6509)"];
n6508 [shape=box,label="(6508)\nwhile ((true)) @:block 6510"];
n6508 -> n6509[style="dashed",color="gray",label="loop-head"];
n6508 -> n6510[style="dashed",color="gray",label="loop-body"];
n6508 -> n6548[style="dashed",color="gray",label="next"];
n6507 [shape=box,label="(6507)\nvar `1 = 0\nvar ` = sh * sw"];
n6507 -> n6508[style="dashed",color="gray",label="merge"];
n6506 [shape=box,label="(6506)\ndestPixels.position = 0\nvar sourcePixel\nvar destPixel\nvar r\nvar g\nvar b\nvar a\nvar color\nvar c1\nvar c2\nvar c3\nvar c4"];
n6506 -> n6507[style="dashed",color="gray",label="sub"];
n6506 -> n6549[style="dashed",color="gray",label="next"];
n6505 [shape=box,label="(6505)\nreturn"];
n6504 [shape=box,label="(6504)\nsourcePixels.position = 0\nvar destRect = new openfl._legacy.geom.Rectangle(destPoint.x,destPoint.y,sw,sh)\nvar destPixels = this.getPixels(destRect)\nvar _hx_tmp = destPixels == null\n@:cond-branch _hx_tmp"];
n6504 -> n6505[style="dashed",color="gray",label="then"];
n6504 -> n6506[style="dashed",color="gray",label="next"];
n6503 [shape=box,label="(6503)\nreturn"];
n6502 [shape=box,label="(6502)\nvar sw = Std.int(sourceRect.width)\nvar sh = Std.int(sourceRect.height)\nvar sourcePixels = sourceBitmapData.getPixels(sourceRect)\nvar _hx_tmp = sourcePixels == null\n@:cond-branch _hx_tmp"];
n6502 -> n6503[style="dashed",color="gray",label="then"];
n6502 -> n6504[style="dashed",color="gray",label="next"];
n6501 [shape=box,label="(6501)\nreturn"];
n6500 [shape=box,label="<function-end>
(6500)"];
n6499 [shape=box,label="<function-begin>
(6499)\nvar _hx_tmp = sourceBitmapData == null\n@:cond-branch _hx_tmp"];
n6499 -> n6501[style="dashed",color="gray",label="then"];
n6499 -> n6502[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
