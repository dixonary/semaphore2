digraph graphname {
n6549 [shape=box,label="(6549)\nScopes: 0\ndestPixels.position = 0\nthis.setPixels(destRect,destPixels)"];
n6548 [shape=box,label="(6548)\nScopes: 4, 0"];
n6547 [shape=box,label="(6547)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = a << 24\nvar _hx_tmp = r << 16\nvar _hx_tmp = _hx_tmp | _hx_tmp\nvar _hx_tmp = g << 8\nvar _hx_tmp = _hx_tmp | _hx_tmp\ncolor = _hx_tmp | b\ndestPixels.position = i * 4\ndestPixels.writeUnsignedInt(color)"];
n6546 [shape=box,label="(6546)\nLoops: 0\nScopes: 29, 5, 4, 0\nvar _hx_tmp = a + \", \"\nvar _hx_tmp = _hx_tmp + r\nvar _hx_tmp = _hx_tmp + \", \"\nvar _hx_tmp = _hx_tmp + g\nvar _hx_tmp = _hx_tmp + \", \"\nvar _hx_tmp = _hx_tmp + b\nhaxe.Log.trace(_hx_tmp,{fileName : \"BitmapData.hx\",lineNumber : 426,className : \"openfl._legacy.display.BitmapData\",methodName : \"merge\"})"];
n6545 [shape=box,label="(6545)\nLoops: 0\nScopes: 5, 4, 0\n@:cond-branch _hx_tmp"];
n6544 [shape=box,label="(6544)\nLoops: 0\nScopes: 28, 5, 4, 0\n_hx_tmp = true"];
n6543 [shape=box,label="(6543)\nLoops: 0\nScopes: 27, 5, 4, 0\n_hx_tmp = b > 255"];
n6542 [shape=box,label="(6542)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n6541 [shape=box,label="(6541)\nLoops: 0\nScopes: 26, 5, 4, 0\n_hx_tmp = true"];
n6540 [shape=box,label="(6540)\nLoops: 0\nScopes: 25, 5, 4, 0\n_hx_tmp = g > 255"];
n6539 [shape=box,label="(6539)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n6538 [shape=box,label="(6538)\nLoops: 0\nScopes: 24, 5, 4, 0\n_hx_tmp = true"];
n6537 [shape=box,label="(6537)\nLoops: 0\nScopes: 23, 5, 4, 0\n_hx_tmp = r > 255"];
n6536 [shape=box,label="(6536)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = _hx_tmp / _hx_tmp\nb = Std.int(_hx_tmp)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = ! a > 255\n@:cond-branch _hx_tmp"];
n6535 [shape=box,label="(6535)\nLoops: 0\nScopes: 22, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6534 [shape=box,label="(6534)\nLoops: 0\nScopes: 21, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6533 [shape=box,label="(6533)\nLoops: 0\nScopes: 5, 4, 0\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6532 [shape=box,label="(6532)\nLoops: 0\nScopes: 20, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6531 [shape=box,label="(6531)\nLoops: 0\nScopes: 19, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6530 [shape=box,label="(6530)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = _hx_tmp / _hx_tmp\ng = Std.int(_hx_tmp)\nvar int = cast cast cast cast cast (cast sourcePixel & 255) * cast redMultiplier + cast cast (cast destPixel & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6529 [shape=box,label="(6529)\nLoops: 0\nScopes: 18, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6528 [shape=box,label="(6528)\nLoops: 0\nScopes: 17, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6527 [shape=box,label="(6527)\nLoops: 0\nScopes: 5, 4, 0\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6526 [shape=box,label="(6526)\nLoops: 0\nScopes: 16, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6525 [shape=box,label="(6525)\nLoops: 0\nScopes: 15, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6524 [shape=box,label="(6524)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = _hx_tmp / _hx_tmp\nr = Std.int(_hx_tmp)\nvar _hx_tmp = sourcePixel >> 8\nvar _hx_tmp = destPixel >> 8\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6523 [shape=box,label="(6523)\nLoops: 0\nScopes: 14, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6522 [shape=box,label="(6522)\nLoops: 0\nScopes: 13, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6521 [shape=box,label="(6521)\nLoops: 0\nScopes: 5, 4, 0\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6520 [shape=box,label="(6520)\nLoops: 0\nScopes: 12, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6519 [shape=box,label="(6519)\nLoops: 0\nScopes: 11, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6518 [shape=box,label="(6518)\nLoops: 0\nScopes: 5, 4, 0\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nvar _hx_tmp = _hx_tmp / _hx_tmp\na = Std.int(_hx_tmp)\nvar _hx_tmp = sourcePixel >> 16\nvar _hx_tmp = destPixel >> 16\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6517 [shape=box,label="(6517)\nLoops: 0\nScopes: 10, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6516 [shape=box,label="(6516)\nLoops: 0\nScopes: 9, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6515 [shape=box,label="(6515)\nLoops: 0\nScopes: 5, 4, 0\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nvar int = cast cast 256\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6514 [shape=box,label="(6514)\nLoops: 0\nScopes: 8, 5, 4, 0\n_hx_tmp = int + 0.0"];
n6513 [shape=box,label="(6513)\nLoops: 0\nScopes: 7, 5, 4, 0\n_hx_tmp = 4294967296.0 + int"];
n6512 [shape=box,label="(6512)\nLoops: 0\nScopes: 5, 4, 0\n`1 = `1 + 1\nvar i = `1 - 1\nsourcePixel = sourcePixels.readUnsignedInt()\ndestPixel = destPixels.readUnsignedInt()\nvar _hx_tmp = sourcePixel >> 24\nvar _hx_tmp = destPixel >> 24\nvar int = cast cast cast cast cast (cast _hx_tmp & 255) * cast redMultiplier + cast cast (cast _hx_tmp & 255) * (cast cast cast 256 - cast redMultiplier)\nvar _hx_tmp\nvar _hx_tmp = int < 0\n@:cond-branch _hx_tmp"];
n6511 [shape=box,label="(6511)\nLoops: 0\nScopes: 6, 5, 4, 0\nbreak"];
n6510 [shape=box,label="(6510)\nLoops: 0\nScopes: 5, 4, 0\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n6509 [shape=box,label="<loop-head>
(6509)\nLoops: 0\nScopes: 5, 4, 0\nsourcePixel = \"phi\"(sourcePixel,sourcePixel)\ndestPixel = \"phi\"(destPixel,destPixel)\nr = \"phi\"(r,r)\ng = \"phi\"(g,g)\nb = \"phi\"(b,b)\na = \"phi\"(a,a)\ncolor = \"phi\"(color,color)\n`1 = \"phi\"(`1,`1)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\ni = \"phi\"(i,i)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nint = \"phi\"(int,int)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nint = \"phi\"(int,int)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\nint = \"phi\"(int,int)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)\n_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)"];
n6508 [shape=box,label="(6508)\nScopes: 4, 0\nwhile ((true)) @:block 6510"];
n6507 [shape=box,label="(6507)\nScopes: 4, 0\nvar `1 = 0\nvar ` = sh * sw"];
n6506 [shape=box,label="(6506)\nScopes: 0\ndestPixels.position = 0\nvar sourcePixel\nvar destPixel\nvar r\nvar g\nvar b\nvar a\nvar color\nvar c1\nvar c2\nvar c3\nvar c4"];
n6505 [shape=box,label="(6505)\nScopes: 3, 0\nreturn"];
n6504 [shape=box,label="(6504)\nScopes: 0\nsourcePixels.position = 0\nvar destRect = new openfl._legacy.geom.Rectangle(destPoint.x,destPoint.y,sw,sh)\nvar destPixels = this.getPixels(destRect)\nvar _hx_tmp = destPixels == null\n@:cond-branch _hx_tmp"];
n6503 [shape=box,label="(6503)\nScopes: 2, 0\nreturn"];
n6502 [shape=box,label="(6502)\nScopes: 0\nvar sw = Std.int(sourceRect.width)\nvar sh = Std.int(sourceRect.height)\nvar sourcePixels = sourceBitmapData.getPixels(sourceRect)\nvar _hx_tmp = sourcePixels == null\n@:cond-branch _hx_tmp"];
n6501 [shape=box,label="(6501)\nScopes: 1, 0\nreturn"];
n6500 [shape=box,label="<function-end>
(6500)"];
n6499 [shape=box,label="<function-begin>
(6499)\nScopes: 0\nvar _hx_tmp = sourceBitmapData == null\n@:cond-branch _hx_tmp"];
n1 [shape=box,label="<root>
(1)"];
n1 -> n6499[label="function"];
n6499 -> n6502[label="else"];
n6499 -> n6501[label="branch"];
n6501 -> n6500[label="goto"];
n6502 -> n6504[label="else"];
n6502 -> n6503[label="branch"];
n6503 -> n6500[label="goto"];
n6504 -> n6506[label="else"];
n6504 -> n6505[label="branch"];
n6505 -> n6500[label="goto"];
n6506 -> n6507[label="goto"];
n6507 -> n6508[label="goto"];
n6508 -> n6509[label="goto"];
n6509 -> n6510[label="goto"];
n6510 -> n6512[label="else"];
n6510 -> n6511[label="branch"];
n6511 -> n6548[label="goto"];
n6548 -> n6549[label="goto"];
n6549 -> n6500[label="goto"];
n6512 -> n6514[label="else"];
n6512 -> n6513[label="branch"];
n6513 -> n6515[label="goto"];
n6515 -> n6517[label="else"];
n6515 -> n6516[label="branch"];
n6516 -> n6518[label="goto"];
n6518 -> n6520[label="else"];
n6518 -> n6519[label="branch"];
n6519 -> n6521[label="goto"];
n6521 -> n6523[label="else"];
n6521 -> n6522[label="branch"];
n6522 -> n6524[label="goto"];
n6524 -> n6526[label="else"];
n6524 -> n6525[label="branch"];
n6525 -> n6527[label="goto"];
n6527 -> n6529[label="else"];
n6527 -> n6528[label="branch"];
n6528 -> n6530[label="goto"];
n6530 -> n6532[label="else"];
n6530 -> n6531[label="branch"];
n6531 -> n6533[label="goto"];
n6533 -> n6535[label="else"];
n6533 -> n6534[label="branch"];
n6534 -> n6536[label="goto"];
n6536 -> n6538[label="else"];
n6536 -> n6537[label="branch"];
n6537 -> n6539[label="goto"];
n6539 -> n6541[label="else"];
n6539 -> n6540[label="branch"];
n6540 -> n6542[label="goto"];
n6542 -> n6544[label="else"];
n6542 -> n6543[label="branch"];
n6543 -> n6545[label="goto"];
n6545 -> n6547[label="else"];
n6545 -> n6546[label="branch"];
n6546 -> n6547[label="goto"];
n6547 -> n6509[label="goto"];
n6544 -> n6545[label="goto"];
n6541 -> n6542[label="goto"];
n6538 -> n6539[label="goto"];
n6535 -> n6536[label="goto"];
n6532 -> n6533[label="goto"];
n6529 -> n6530[label="goto"];
n6526 -> n6527[label="goto"];
n6523 -> n6524[label="goto"];
n6520 -> n6521[label="goto"];
n6517 -> n6518[label="goto"];
n6514 -> n6515[label="goto"];
}
