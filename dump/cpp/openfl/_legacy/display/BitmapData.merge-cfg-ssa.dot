digraph graphname {
	node [shape=plaintext];
n6549[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6549) BKNormal</td></tr>
	<tr><td port="e0" align="left">destPixels.position = 0</td></tr>
	<tr><td port="e1" align="left">this.setPixels(destRect,destPixels)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6548[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6548) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6547[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6547) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = a &lt;&lt; 24</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp = r &lt;&lt; 16</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = _hx_tmp | _hx_tmp</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = g &lt;&lt; 8</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp = _hx_tmp | _hx_tmp</td></tr>
	<tr><td port="e5" align="left">color = _hx_tmp | b</td></tr>
	<tr><td port="e6" align="left">destPixels.position = i * 4</td></tr>
	<tr><td port="e7" align="left">destPixels.writeUnsignedInt(color)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6546[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6546) BKConditional</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = a + \", \"</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp = _hx_tmp + r</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = _hx_tmp + \", \"</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = _hx_tmp + g</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp = _hx_tmp + \", \"</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp = _hx_tmp + b</td></tr>
	<tr><td port="e6" align="left">haxe.Log.trace(_hx_tmp,{fileName : \"BitmapData.hx\",lineNumber : 426,className : \"openfl._legacy.display.BitmapData\",methodName : \"merge\"})</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6545[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6545) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6544[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6544) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6543[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6543) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = b &gt; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6542[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6542) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = ! _hx_tmp</td></tr>
	<tr><td port="e1" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6541[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6541) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6540[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6540) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = g &gt; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6539[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6539) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = ! _hx_tmp</td></tr>
	<tr><td port="e1" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6538[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6538) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6537[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6537) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = r &gt; 255</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6536[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6536) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = _hx_tmp / _hx_tmp</td></tr>
	<tr><td port="e1" align="left">b = Std.int(_hx_tmp)</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp = ! a &gt; 255</td></tr>
	<tr><td port="e6" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6535[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6535) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6534[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6534) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6533[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6533) BKNormal</td></tr>
	<tr><td port="e0" align="left">var int = cast cast 256</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e3" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6532[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6532) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6531[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6531) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6530[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6530) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = _hx_tmp / _hx_tmp</td></tr>
	<tr><td port="e1" align="left">g = Std.int(_hx_tmp)</td></tr>
	<tr><td port="e2" align="left">var int = cast cast cast cast cast (cast sourcePixel &amp; 255) * cast redMultiplier + cast cast (cast destPixel &amp; 255) * (cast cast cast 256 - cast redMultiplier)</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e5" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6529[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6529) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6528[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6528) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6527[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6527) BKNormal</td></tr>
	<tr><td port="e0" align="left">var int = cast cast 256</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e3" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6526[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6526) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6525[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6525) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6524[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6524) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = _hx_tmp / _hx_tmp</td></tr>
	<tr><td port="e1" align="left">r = Std.int(_hx_tmp)</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = sourcePixel &gt;&gt; 8</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = destPixel &gt;&gt; 8</td></tr>
	<tr><td port="e4" align="left">var int = cast cast cast cast cast (cast _hx_tmp &amp; 255) * cast redMultiplier + cast cast (cast _hx_tmp &amp; 255) * (cast cast cast 256 - cast redMultiplier)</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp</td></tr>
	<tr><td port="e6" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e7" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6523[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6523) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6522[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6522) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6521[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6521) BKNormal</td></tr>
	<tr><td port="ep0" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="e0" align="left">var int = cast cast 256</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e3" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6520[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6520) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6519[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6519) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6518[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6518) BKNormal</td></tr>
	<tr><td port="ep0" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = _hx_tmp / _hx_tmp</td></tr>
	<tr><td port="e1" align="left">a = Std.int(_hx_tmp)</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = sourcePixel &gt;&gt; 16</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = destPixel &gt;&gt; 16</td></tr>
	<tr><td port="e4" align="left">var int = cast cast cast cast cast (cast _hx_tmp &amp; 255) * cast redMultiplier + cast cast (cast _hx_tmp &amp; 255) * (cast cast cast 256 - cast redMultiplier)</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp</td></tr>
	<tr><td port="e6" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e7" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6517[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6517) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6516[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6516) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6515[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6515) BKNormal</td></tr>
	<tr><td port="ep0" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="e0" align="left">var int = cast cast 256</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e3" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6514[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6514) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = int + 0.0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6513[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6513) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = 4294967296.0 + int</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6512[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6512) BKNormal</td></tr>
	<tr><td port="e0" align="left">`1 = `1 + 1</td></tr>
	<tr><td port="e1" align="left">var i = `1 - 1</td></tr>
	<tr><td port="e2" align="left">sourcePixel = sourcePixels.readUnsignedInt()</td></tr>
	<tr><td port="e3" align="left">destPixel = destPixels.readUnsignedInt()</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp = sourcePixel &gt;&gt; 24</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp = destPixel &gt;&gt; 24</td></tr>
	<tr><td port="e6" align="left">var int = cast cast cast cast cast (cast _hx_tmp &amp; 255) * cast redMultiplier + cast cast (cast _hx_tmp &amp; 255) * (cast cast cast 256 - cast redMultiplier)</td></tr>
	<tr><td port="e7" align="left">var _hx_tmp</td></tr>
	<tr><td port="e8" align="left">var _hx_tmp = int &lt; 0</td></tr>
	<tr><td port="e9" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6511[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6511) BKConditional</td></tr>
	<tr><td port="e0" align="left">break</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6510[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6510) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = ! ((`1 &lt; `))</td></tr>
	<tr><td port="e1" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6509[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6509) BKLoopHead</td></tr>
	<tr><td port="ep0" align="left">sourcePixel = \"phi\"(sourcePixel,sourcePixel)</td></tr>
	<tr><td port="ep1" align="left">destPixel = \"phi\"(destPixel,destPixel)</td></tr>
	<tr><td port="ep2" align="left">r = \"phi\"(r,r)</td></tr>
	<tr><td port="ep3" align="left">g = \"phi\"(g,g)</td></tr>
	<tr><td port="ep4" align="left">b = \"phi\"(b,b)</td></tr>
	<tr><td port="ep5" align="left">a = \"phi\"(a,a)</td></tr>
	<tr><td port="ep6" align="left">color = \"phi\"(color,color)</td></tr>
	<tr><td port="ep7" align="left">`1 = \"phi\"(`1,`1)</td></tr>
	<tr><td port="ep8" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep9" align="left">i = \"phi\"(i,i)</td></tr>
	<tr><td port="ep10" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep11" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep12" align="left">int = \"phi\"(int,int)</td></tr>
	<tr><td port="ep13" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep14" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep15" align="left">int = \"phi\"(int,int)</td></tr>
	<tr><td port="ep16" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep17" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep18" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep19" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep20" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep21" align="left">int = \"phi\"(int,int)</td></tr>
	<tr><td port="ep22" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="ep23" align="left">_hx_tmp = \"phi\"(_hx_tmp,_hx_tmp)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6508[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6508) BKNormal</td></tr>
	<tr><td port="e0" align="left">while ((true)) @:block 6510</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6507[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6507) BKSub</td></tr>
	<tr><td port="e0" align="left">var `1 = 0</td></tr>
	<tr><td port="e1" align="left">var ` = sh * sw</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6506[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6506) BKNormal</td></tr>
	<tr><td port="e0" align="left">destPixels.position = 0</td></tr>
	<tr><td port="e1" align="left">var sourcePixel</td></tr>
	<tr><td port="e2" align="left">var destPixel</td></tr>
	<tr><td port="e3" align="left">var r</td></tr>
	<tr><td port="e4" align="left">var g</td></tr>
	<tr><td port="e5" align="left">var b</td></tr>
	<tr><td port="e6" align="left">var a</td></tr>
	<tr><td port="e7" align="left">var color</td></tr>
	<tr><td port="e8" align="left">var c1</td></tr>
	<tr><td port="e9" align="left">var c2</td></tr>
	<tr><td port="e10" align="left">var c3</td></tr>
	<tr><td port="e11" align="left">var c4</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6505[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6505) BKConditional</td></tr>
	<tr><td port="e0" align="left">return</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6504[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6504) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourcePixels.position = 0</td></tr>
	<tr><td port="e1" align="left">var destRect = new openfl._legacy.geom.Rectangle(destPoint.x,destPoint.y,sw,sh)</td></tr>
	<tr><td port="e2" align="left">var destPixels = this.getPixels(destRect)</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = destPixels == null</td></tr>
	<tr><td port="e4" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6503[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6503) BKConditional</td></tr>
	<tr><td port="e0" align="left">return</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6502[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6502) BKNormal</td></tr>
	<tr><td port="e0" align="left">var sw = Std.int(sourceRect.width)</td></tr>
	<tr><td port="e1" align="left">var sh = Std.int(sourceRect.height)</td></tr>
	<tr><td port="e2" align="left">var sourcePixels = sourceBitmapData.getPixels(sourceRect)</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = sourcePixels == null</td></tr>
	<tr><td port="e4" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6501[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6501) BKConditional</td></tr>
	<tr><td port="e0" align="left">return</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6500[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6500) BKFunctionEnd</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n6499[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(6499) BKFunctionBegin</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = sourceBitmapData == null</td></tr>
	<tr><td port="e1" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(1) BKRoot</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1:out -> n6499:in[label="CFGFunction"];
n6499:out -> n6502:in[label="CFGCondElse"];
n6499:out -> n6501:in[label="CFGCondBranch true"];
n6501:out -> n6500:in[label="CFGGoto"];
n6502:out -> n6504:in[label="CFGCondElse"];
n6502:out -> n6503:in[label="CFGCondBranch true"];
n6503:out -> n6500:in[label="CFGGoto"];
n6504:out -> n6506:in[label="CFGCondElse"];
n6504:out -> n6505:in[label="CFGCondBranch true"];
n6505:out -> n6500:in[label="CFGGoto"];
n6506:out -> n6507:in[label="CFGGoto"];
n6507:out -> n6508:in[label="CFGGoto"];
n6508:out -> n6509:in[label="CFGGoto"];
n6509:out -> n6510:in[label="CFGGoto"];
n6510:out -> n6512:in[label="CFGCondElse"];
n6510:out -> n6511:in[label="CFGCondBranch true"];
n6511:out -> n6548:in[label="CFGGoto"];
n6548:out -> n6549:in[label="CFGGoto"];
n6549:out -> n6500:in[label="CFGGoto"];
n6512:out -> n6514:in[label="CFGCondElse"];
n6512:out -> n6513:in[label="CFGCondBranch true"];
n6513:out -> n6515:in[label="CFGGoto"];
n6515:out -> n6517:in[label="CFGCondElse"];
n6515:out -> n6516:in[label="CFGCondBranch true"];
n6516:out -> n6518:in[label="CFGGoto"];
n6518:out -> n6520:in[label="CFGCondElse"];
n6518:out -> n6519:in[label="CFGCondBranch true"];
n6519:out -> n6521:in[label="CFGGoto"];
n6521:out -> n6523:in[label="CFGCondElse"];
n6521:out -> n6522:in[label="CFGCondBranch true"];
n6522:out -> n6524:in[label="CFGGoto"];
n6524:out -> n6526:in[label="CFGCondElse"];
n6524:out -> n6525:in[label="CFGCondBranch true"];
n6525:out -> n6527:in[label="CFGGoto"];
n6527:out -> n6529:in[label="CFGCondElse"];
n6527:out -> n6528:in[label="CFGCondBranch true"];
n6528:out -> n6530:in[label="CFGGoto"];
n6530:out -> n6532:in[label="CFGCondElse"];
n6530:out -> n6531:in[label="CFGCondBranch true"];
n6531:out -> n6533:in[label="CFGGoto"];
n6533:out -> n6535:in[label="CFGCondElse"];
n6533:out -> n6534:in[label="CFGCondBranch true"];
n6534:out -> n6536:in[label="CFGGoto"];
n6536:out -> n6538:in[label="CFGCondElse"];
n6536:out -> n6537:in[label="CFGCondBranch true"];
n6537:out -> n6539:in[label="CFGGoto"];
n6539:out -> n6541:in[label="CFGCondElse"];
n6539:out -> n6540:in[label="CFGCondBranch true"];
n6540:out -> n6542:in[label="CFGGoto"];
n6542:out -> n6544:in[label="CFGCondElse"];
n6542:out -> n6543:in[label="CFGCondBranch true"];
n6543:out -> n6545:in[label="CFGGoto"];
n6545:out -> n6547:in[label="CFGCondElse"];
n6545:out -> n6546:in[label="CFGCondBranch true"];
n6546:out -> n6547:in[label="CFGGoto"];
n6547:out -> n6509:in[label="CFGGoto"];
n6544:out -> n6545:in[label="CFGGoto"];
n6541:out -> n6542:in[label="CFGGoto"];
n6538:out -> n6539:in[label="CFGGoto"];
n6535:out -> n6536:in[label="CFGGoto"];
n6532:out -> n6533:in[label="CFGGoto"];
n6529:out -> n6530:in[label="CFGGoto"];
n6526:out -> n6527:in[label="CFGGoto"];
n6523:out -> n6524:in[label="CFGGoto"];
n6520:out -> n6521:in[label="CFGGoto"];
n6517:out -> n6518:in[label="CFGGoto"];
n6514:out -> n6515:in[label="CFGGoto"];
}
